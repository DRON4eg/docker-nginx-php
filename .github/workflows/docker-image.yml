name: Docker Image CI

on:
  push:
    branches: 
     - master
    tags:
      - v*
  pull_request:
    #branches: [ master ]

env:
  IMAGE_NAME: nginx-php

jobs:
  build:
    #runs-on: ubuntu-latest
    runs-on: [self-hosted, linux, x64]
    if: github.event_name == 'push'
    
    services: 
      image: docker:19-dind
    
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        #run: docker build . --file Dockerfile.7.4 --tag my-image-name:$(date +%s)
        run: docker build . --file Dockerfile.7.4 --tag $IMAGE_NAME
      
      - name: Log into registry
        #run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          #IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=ghcr.io/${{ github.actor }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
